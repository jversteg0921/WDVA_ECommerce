@inject IPersonalInfoService PersonalInfoService

@if(personalInfo == null)
{
	<span>Please enter user details.</span>
	<button class="btn" @onclick="InitPersonalInfo">Add user details?</button>
}
else if (!edit)
{
	<p>
		<span>@personalInfo.FirstName @personalInfo.LastName</span> <br />
		<span>@personalInfo.Street</span> <br />
		<span>@personalInfo.City, @personalInfo.State, @personalInfo.Zip</span>
		<span>@personalInfo.Country</span> <br />
		<span>Phone: @personalInfo.Phone</span>
	</p>
	<button class="btn btn-primary" @onclick="EditPersonalInfo">Edit</button>
}
else
{
	<EditForm Model="personalInfo" OnValidSubmit="SubmitPersonalInfo">
		<DataAnnotationsValidator />
		<div class="mb-3">
			<label for="firstname">First Name</label>
			<InputText id="firstname" @bind-Value="personalInfo.FirstName" class="form-control"/>
			<ValidationMessage For="@(() => personalInfo.FirstName)" />
		</div>
		<div class="mb-3">
			<label for="lastname">Last Name</label>
			<InputText id="lastname" @bind-Value="personalInfo.LastName" class="form-control" />
			<ValidationMessage For="@(() => personalInfo.LastName)" />
		</div>
		<div class="mb-3">
			<label for="street">Streete</label>
			<InputText id="street" @bind-Value="personalInfo.Street" class="form-control"/>
			<ValidationMessage For="@(() => personalInfo.Street)" />
		</div>
		<div class="mb-3">
			<label for="city">City</label>
			<InputText id="city" @bind-Value="personalInfo.City" class="form-control"/>
			<ValidationMessage For="@(() => personalInfo.City)" />
		</div>
		<div class="mb-3">
			<label for="state">State</label>
			<InputText id="state" @bind-Value="personalInfo.State" class="form-control" />
			<ValidationMessage For="@(() => personalInfo.State)" />
		</div>
		<div class="mb-3">
			<label for="zip">ZIP Code</label>
			<InputText id="zip" @bind-Value="personalInfo.Zip" class="form-control"/>
			<ValidationMessage For="@(() => personalInfo.Zip)" />
		</div>
		<div class="mb-3">
			<label for="country">Country</label>
			<InputText id="country" @bind-Value="personalInfo.Country" class="form-control" />
			<ValidationMessage For="@(() => personalInfo.Country)" />
		</div>
		<div class="mb-3">
			<label>Phone</label>
			<InputMask @bind-Value="personalInfo.Phone" class="form-control" data-mask="(000) 000-0000" />
			<ValidationMessage For="@(() => personalInfo.Phone)" />
		</div>
		<div class="mb-3">
			<label for="dob">Date of Birth</label>
			<InputDate id="dob" @bind-Value="personalInfo.DOB" class="form-control" />
			<ValidationMessage For="@(() => personalInfo.DOB)" />
		</div>
		<div class="mb-3">
			<label for="gender">Gender</label>
			<InputText id="gender" @bind-Value="personalInfo.Gender" class="form-control" />
			<ValidationMessage For="@(() => personalInfo.Gender)" />
		</div>
		<button type="submit" class="btn btn-primary">Save</button>
	</EditForm>
}

@code {
	PersonalInfo personalInfo = null;
	bool edit = false;

	protected override async Task OnInitializedAsync()
	{
		personalInfo = await PersonalInfoService.GetPersonalInfo();

	}

	private async Task SubmitPersonalInfo()
	{
		edit = false;
		personalInfo = await PersonalInfoService.AddOrUpdatePersonalInfo(personalInfo);

	}


	private void InitPersonalInfo()
	{
		personalInfo = new PersonalInfo();
		edit = true;
	}

	private void EditPersonalInfo()
	{
		edit = true;
	}
}
